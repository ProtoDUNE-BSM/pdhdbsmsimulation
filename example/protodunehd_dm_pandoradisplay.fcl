#include "pandoramodules_dune.fcl"
#include "featurelabelingmodules.fcl"
#include "services_dune.fcl"

process_name: mypandoradisplay

services:
{
  # Load the service that manages root files for histograms.
  TimeTracker:       @local::dune_time_tracker
  MemoryTracker:     @local::dune_memory_tracker
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod
  FileCatalogMetadata:  @local::art_file_catalog_data
  ChannelStatusService: @local::dunefd_channel_status
  WireReadout:          @local::dune_wire_readout
  GeometryConfigurationWriter:  {}
  Geometry:                     @local::protodunehdv6_geo
  DetectorClocksService:        @local::protodunehd_detectorclocks
  DetectorPropertiesService:    @local::protodunehd_detproperties
  LArPropertiesService:         @local::dunefd_properties
  LArFFT:                       @local::dunefd_larfft
  DatabaseUtil:                 @local::dunefd_database

  IFDH: {}

  TFileService: 
  {
    fileName: "pdhd_keepup_decoder.root"
  } 
  HDF5RawFile3Service:  {}

  DAPHNEChannelMapService: {
    FileName: "DAPHNE_test5_ChannelMap_v1.txt"
  }

  PD2HDChannelMapService: 
  {
    FileName: "PD2HDChannelMap_WIBEth_electronics_v1.txt"
  }
}

physics:
{
  producers:
  {
    # Pandora Reconstruction
    pandoraDisplay:            @local::protodunehd_pandora
  }

  produce: [
    pandoraDisplay
  ]

  output: [ out1 ]
  trigger_paths : [ produce ]
  end_paths: [ ]
}

source:
{
  module_type: RootInput
  maxEvents: -1
  saveMemoryObjectThreshold: 0
}

physics.producers.pandoraDisplay.HitFinderModuleLabel:             "hitpdune"
physics.producers.pandoraDisplay.ConfigFile:            "./srcs/pdhdbsmsimulation/example/PandoraSettings_Master_ProtoDUNE_HD_Neutrino_Visualise.xml"
